services:
  postgres:
    image: postgis/postgis:16-3.4-alpine
    container_name: postgres
    ports:
      - "5433:5432"
    env_file:
      - docker/.env
    networks:
      - vou-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  migration:
    build:
      context: .
      dockerfile: docker/Dockerfile.migration
    container_name: migration
    env_file:
      - docker/.env
    networks:
      - vou-network
    depends_on:
      postgres:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-vou
    networks:
      - vou-network
    env_file:
      - docker/.env
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  redis:
    image: redis:6
    container_name: redis
    networks:
      - vou-network
    env_file:
      - docker/.env
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  main-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.service
      args:
        SERVICE_NAME: main-api
        STAGE: dev
    ports:
      - "3000:3000"
    env_file:
      - ./apps/main-api/.env.build
    container_name: main-api
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    networks:
      - vou-network

  account-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.service
      args:
        SERVICE_NAME: account-service
        STAGE: dev
    ports:
      - "3001:3001"
    env_file:
      - ./apps/account-service/.env.build
    container_name: account-service
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    networks:
      - vou-network

  event-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.service
      args:
        SERVICE_NAME: event-service
        STAGE: dev
    ports:
      - "3002:3002"
    env_file:
      - ./apps/event-service/.env.build
    container_name: event-service
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    networks:
      - vou-network

  bucket-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.service
      args:
        SERVICE_NAME: bucket-service
        STAGE: dev
    ports:
      - "3003:3003"
    env_file:
      - ./apps/bucket-service/.env.build
    container_name: bucket-service
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    networks:
      - vou-network

volumes:
  postgres-data:
  rabbitmq-data:
  redis-data:

networks:
  vou-network:
    driver: bridge
